[2021-06-29 15:15:09] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:15:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:15:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@d484f64
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40a0d587
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5a08f1e3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:15:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:15:51] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:15:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:15:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@d484f64
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40a0d587
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5a08f1e3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:15:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:16:39] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:17:00] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:17:15] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:17:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:17:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@d484f64
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40a0d587
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5a08f1e3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:17:20] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:18:59] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:19:06] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:19:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:19:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@d484f64
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40a0d587
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5a08f1e3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:19:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:22:35] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:22:39] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:22:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:22:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@d484f64
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@40a0d587
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@5a08f1e3
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:22:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:23:11] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:23:24] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:23:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:23:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2ae0179c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1391e3c0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@d03d42a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:23:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 15:24:56] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:28:29] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:32:25] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:38:29] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:38:30] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:39:46] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:42:53] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 15:42:59] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 15:42:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 15:42:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@2ae0179c
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@1391e3c0
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@d03d42a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 15:42:59] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 16:04:58] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:05:04] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 16:05:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 16:05:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@29eb7b67
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@61ad3203
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7967bd76
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 16:05:04] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 16:06:26] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:06:43] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:07:46] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:17:22] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:19:43] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:19:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 16:19:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@29eb7b67
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@61ad3203
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@7967bd76
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 16:19:55] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 16:21:34] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:21:36] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:21:48] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:31:41] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 16:31:41] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 16:31:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3355aa69

[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-1"
[2021-06-29 16:31:42] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA
[2021-06-29 16:31:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3355aa69
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Environment] -- HHH000206: hibernate.properties not found
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2f234f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@9e5cf7f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@2163314c
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d6e18e2
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d6e18e2
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67b3ca9b
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67b3ca9b
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@30aa4155
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@30aa4155
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1964fc02
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58a93507
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@5200d053
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@5200d053
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@53dc7a99
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@53dc7a99
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@4c75d294
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4c75d294
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48876a60
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48876a60
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@70497f20
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@70497f20
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@76a4f6ff
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@76a4f6ff
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2905ec
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2905ec
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e59fa1e
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e59fa1e
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@683f6c4d
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@683f6c4d
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@36393e23
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@36393e23
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@76e17514
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76e17514
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5dc4145f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64dd8c36
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@af048fe
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@23408335
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23408335
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@3ba28f0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ba28f0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ea1e08a
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ea1e08a
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@636fec5
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@636fec5
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54379420
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54379420
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@405302b8
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@3999e410
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@702760b8
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@2a5509c0
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@5da19d28
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@7c98e824
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c98e824
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6134d1d8
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@91f7561
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@91f7561
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@79e38288
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79e38288
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f282a40
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d7ffdc
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@1f33ac65
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@14cf6285
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14cf6285
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@3359e43b
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@1a6dd56d
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@2898c5c9
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@1f31e815
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@6335aff4
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@1787d842
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@79dfe1f6
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@693ecf98
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21a10e9b] into BootstrapContext; was [null]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21a10e9b) [was null]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5f293861] into BootstrapContext; was [null]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@ad7178b] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@771a03c9]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21a10e9b]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@21a10e9b]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fd55f5e] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@34eaf43]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@3f6bb67e, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@46062622, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2565680657984572007, java.version=11.0.5, com.sun.management.jmxremote.port=59399, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=74285, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2565680657984572007, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@44a7a582, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 16:31:43] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@3fd55f5e] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@2f698958]
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@205806ba]
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@75a085ae
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: a7fbbf33-d33f-4ce6-aa72-e44e5a39d450 (<unnamed>)
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:31:44] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 2
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Jane, membership=false, userId=2, age=26}
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 3
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Doe, membership=false, userId=3, age=35}
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 4
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Lisa, membership=true, userId=4, age=46}
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 5
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Ann, membership=false, userId=5, age=41}
[2021-06-29 16:31:45] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:32:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:32:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] -- QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@26e38ae4
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- parse() - HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'prototype'
       |     |  |  |  \-[IDENT] Node: 'thymeleaf'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select << begin [level=1, statement=select]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromElement] -- FromClause{level=1} : com.prototype.thymeleaf.entity.User (generatedAlias0) -> user0_
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromReferenceNode] -- Resolved : generatedAlias0 -> user0_.user_id
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select : finishing up [level=1, statement=select]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.HqlSqlWalker] -- processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.prototype.thymeleaf.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Using FROM fragment [user user0_]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select >> end [level=1, statement=select]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=com.prototype.thymeleaf.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.prototype.thymeleaf.entity.User}}

[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- SQL: select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 16:32:24] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:32:24] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 16:32:24] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 16:32:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@408dec17
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2546a6ed
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1376850a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 16:32:25] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 16:32:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:32:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:33:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:33:13] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:33:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:33:43] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2973b809] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@2f698958]
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 16:34:00] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:257edfd8-5c5b-42d2-92e4-829715b2ddaa user=SA: (connection evicted)
[2021-06-29 16:34:00] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 16:34:01] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2123e95c

[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-2 - configuration:
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-2"
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@2123e95c
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-2)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@64642c92
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@3b2f234f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@9e5cf7f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@2163314c
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@5da85611
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@449bf1e0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@39c41a1f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@4b576561
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@21a16186
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@7b7a79ae
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@2b519417
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4d6e18e2
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4d6e18e2
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@67b3ca9b
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@67b3ca9b
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@30aa4155
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@30aa4155
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@1964fc02
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@58a93507
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@5200d053
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@5200d053
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@53dc7a99
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@53dc7a99
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@4c75d294
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4c75d294
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@48876a60
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@48876a60
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@70497f20
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@70497f20
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@76a4f6ff
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@76a4f6ff
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2905ec
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@7e2905ec
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@e59fa1e
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@e59fa1e
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@683f6c4d
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@683f6c4d
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@36393e23
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@36393e23
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@76e17514
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@76e17514
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@10408650
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@5dc4145f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@30a7457f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@64dd8c36
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@af048fe
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@23408335
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@23408335
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@3ba28f0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@3ba28f0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@2ea1e08a
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@2ea1e08a
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@636fec5
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@636fec5
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@54379420
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@54379420
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@405302b8
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@7db64499
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@2e7f3914
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@3999e410
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@702760b8
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@4a4d25de
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@358c60be
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@2a5509c0
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@5da19d28
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@7c98e824
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7c98e824
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@6134d1d8
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@91f7561
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@91f7561
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@79e38288
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@79e38288
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@f282a40
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@5d7ffdc
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@1f33ac65
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@14cf6285
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@14cf6285
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@5e2ccf6b
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d861bf8
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@3b56775e
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@4b353005
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@73dae99f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@3ece65c7
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@362a09c7
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@54fda21f
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d628c8d] into BootstrapContext; was [null]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d628c8d) [was null]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5b60ced7] into BootstrapContext; was [null]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@623462fe] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6b0a86e9]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d628c8d]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3d628c8d]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@639a4f58] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1fa0c6d2]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@77b8dd3b, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4669ac1b, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2565680657984572007, java.version=11.0.5, com.sun.management.jmxremote.port=59399, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=74285, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2565680657984572007, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5f667452, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-2), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@639a4f58] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@207517c1]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@66975ad1]
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=1, active=1, idle=0, waiting=0)
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn11: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn12: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn13: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn14: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn15: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn16: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn17: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn18: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn19: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA
[2021-06-29 16:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - After adding stats (total=10, active=1, idle=9, waiting=0)
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: 9550c9f3-3604-4796-a61a-51aca6d8f3fd (<unnamed>)
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 16:34:01] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 2
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Jane, membership=false, userId=2, age=26}
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 3
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Doe, membership=false, userId=3, age=35}
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 4
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Lisa, membership=true, userId=4, age=46}
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 5
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Ann, membership=false, userId=5, age=41}
[2021-06-29 16:34:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 16:34:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 16:34:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@408dec17
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@2546a6ed
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@1376850a
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 16:34:15] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 16:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@67f88aad] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@207517c1]
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 16:36:16] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn10: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn11: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn12: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn13: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn14: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn15: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn16: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn17: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn18: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn19: url=jdbc:h2:mem:de37af91-fa11-46b1-9cdd-0b8407d3af92 user=SA: (connection evicted)
[2021-06-29 16:36:16] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 18:27:02] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:27:02] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:27:02] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:27:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73c87f77

[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-1"
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 18:27:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA
[2021-06-29 18:27:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@73c87f77
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Environment] -- HHH000206: hibernate.properties not found
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72f576
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c38e04
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@e5edab7
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce233af
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d41d1b1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@216dbe79
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c1c84d6
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7fee08d8
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@559e18ef
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@765629d4
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@28203164
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@1bd66cc3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@76237c37
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e3c75b3
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67128faf
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54b76281
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6476ed26
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@71e36c8a
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3d1c796e
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@32472f9f
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3112f3c1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5bff5e55
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@5769b4d
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@ec667ab
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@286c1149
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@578ffb7c] into BootstrapContext; was [null]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@578ffb7c) [was null]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1f7358f0] into BootstrapContext; was [null]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@36463259] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@12a7c65a]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@578ffb7c]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@578ffb7c]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf2c9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@74f38624]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5dc5cd47, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@6bf8f900, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, java.version=11.0.5, com.sun.management.jmxremote.port=60553, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76362, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@491c6e0d, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:27:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@48cf2c9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@5d2f4630]
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@40aa2d08]
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1f1ed5bc
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: 621f1d35-5297-4c3b-b630-429f93fa7763 (<unnamed>)
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:27:06] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 2
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Jane, membership=false, userId=2, age=26}
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 3
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Doe, membership=false, userId=3, age=35}
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 4
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Lisa, membership=true, userId=4, age=46}
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 5
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Ann, membership=false, userId=5, age=41}
[2021-06-29 18:27:07] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:27:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:27:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:27:38] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:27:38] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] -- QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5534ed7b
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- parse() - HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'prototype'
       |     |  |  |  \-[IDENT] Node: 'thymeleaf'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select << begin [level=1, statement=select]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromElement] -- FromClause{level=1} : com.prototype.thymeleaf.entity.User (generatedAlias0) -> user0_
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromReferenceNode] -- Resolved : generatedAlias0 -> user0_.user_id
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select : finishing up [level=1, statement=select]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.HqlSqlWalker] -- processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.prototype.thymeleaf.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Using FROM fragment [user user0_]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select >> end [level=1, statement=select]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=com.prototype.thymeleaf.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.prototype.thymeleaf.entity.User}}

[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- SQL: select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:27:39] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:27:39] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 18:27:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 18:27:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5af95937
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e4b518
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b7b3b67
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 18:27:39] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 18:28:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:28:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:28:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:28:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:29:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:29:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:29:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:29:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:30:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:30:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:30:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:30:35] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:31:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:31:05] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@3559fe5d] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@5d2f4630]
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 18:31:07] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:3c5df1b3-4424-4f66-9107-1f270353d08c user=SA: (connection evicted)
[2021-06-29 18:31:07] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 18:31:08] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@230c4633

[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-2 - configuration:
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-2"
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@230c4633
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-2)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72f576
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c38e04
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@e5edab7
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce233af
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d41d1b1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@216dbe79
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c1c84d6
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7fee08d8
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@559e18ef
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@765629d4
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@28203164
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@1bd66cc3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@76237c37
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e3c75b3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67128faf
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54b76281
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6476ed26
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@1db2f017
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@7d00f81c
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@148adeb3
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@3bb1dece
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@3189b3e7
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@4bb37dd2
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@98e4d51
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@3cfca500
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@109b97ce] into BootstrapContext; was [null]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@109b97ce) [was null]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@6b04b449] into BootstrapContext; was [null]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3209c88c] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@43919099]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@109b97ce]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@109b97ce]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a3f8852] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3a1d4929]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5eb51130, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-2), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@485e6fac, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, java.version=11.0.5, com.sun.management.jmxremote.port=60553, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76362, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@18da338f, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-2), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@6a3f8852] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@25df11cc]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@11038f58]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: 94b719b7-c163-4532-bc34-7c7684d8e6ce (<unnamed>)
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn11: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn12: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn13: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn14: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn15: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn16: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn17: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn18: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Added connection conn19: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA
[2021-06-29 18:31:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:31:08] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 2
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Jane, membership=false, userId=2, age=26}
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 3
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Doe, membership=false, userId=3, age=35}
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 4
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Lisa, membership=true, userId=4, age=46}
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 5
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Ann, membership=false, userId=5, age=41}
[2021-06-29 18:31:09] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:31:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:31:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:31:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 18:31:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5af95937
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e4b518
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b7b3b67
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 18:31:58] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 18:32:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:32:08] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:32:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:32:38] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5f0c0fca] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@25df11cc]
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 18:32:59] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn10: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn11: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn12: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn13: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn14: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn15: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn16: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn17: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn18: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-2 - Closing connection conn19: url=jdbc:h2:mem:45dfd64d-efd4-4bfe-8b66-0f3f4d6eca96 user=SA: (connection evicted)
[2021-06-29 18:32:59] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-2 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 18:32:59] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3091915

[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-3 - configuration:
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-3"
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn20: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn21: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn22: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn23: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn24: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn25: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn26: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn27: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn28: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn29: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 18:33:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@3091915
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-3)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72f576
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c38e04
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@e5edab7
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@6afede27
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce233af
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d41d1b1
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@221163e2
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@216dbe79
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c1c84d6
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7fee08d8
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@559e18ef
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@765629d4
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@28203164
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@1bd66cc3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@76237c37
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e3c75b3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67128faf
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54b76281
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6476ed26
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@21e937d3
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@3341a045
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@5e5ababd
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@7fee474d
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@1751a0cc
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@29ac69eb
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@22a8a131
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2ff15e06
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f150889] into BootstrapContext; was [null]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f150889) [was null]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@18d39f73] into BootstrapContext; was [null]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3df7e301] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@6eff5337]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f150889]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7f150889]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@94a54db] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@70697cc5]
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 18:33:01] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@2696509f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-3), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@7d21341a, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, java.version=11.0.5, com.sun.management.jmxremote.port=60553, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76362, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@4695e02f, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-3), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@94a54db] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@28fa2db3]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2e34c61a]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: 6c517d96-853b-4679-9f36-0bb13f96859a (<unnamed>)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 2
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 2, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Jane, membership=false, userId=2, age=26}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 3
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 3, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Doe, membership=false, userId=3, age=35}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 4
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 4, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Lisa, membership=true, userId=4, age=46}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 5
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 5, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Ann, membership=false, userId=5, age=41}
[2021-06-29 18:33:02] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:33:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 18:33:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@5af95937
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e4b518
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@2b7b3b67
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 18:33:18] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 18:33:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:33:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:34:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:34:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:35:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:35:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:36:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:36:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:36:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 6
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 6, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=Marie, membership=false, userId=6, age=10}
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.QueryTranslatorFactoryInitiator] -- QueryTranslatorFactory: org.hibernate.hql.internal.ast.ASTQueryTranslatorFactory@5534ed7b
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- parse() - HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- HQL AST ---
 \-[QUERY] Node: 'query'
    \-[SELECT_FROM] Node: 'SELECT_FROM'
       +-[FROM] Node: 'from'
       |  \-[RANGE] Node: 'RANGE'
       |     +-[DOT] Node: '.'
       |     |  +-[DOT] Node: '.'
       |     |  |  +-[DOT] Node: '.'
       |     |  |  |  +-[DOT] Node: '.'
       |     |  |  |  |  +-[IDENT] Node: 'com'
       |     |  |  |  |  \-[IDENT] Node: 'prototype'
       |     |  |  |  \-[IDENT] Node: 'thymeleaf'
       |     |  |  \-[IDENT] Node: 'entity'
       |     |  \-[IDENT] Node: 'User'
       |     \-[ALIAS] Node: 'generatedAlias0'
       \-[SELECT] Node: 'select'
          \-[IDENT] Node: 'generatedAlias0'

[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select << begin [level=1, statement=select]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromElement] -- FromClause{level=1} : com.prototype.thymeleaf.entity.User (generatedAlias0) -> user0_
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.tree.FromReferenceNode] -- Resolved : generatedAlias0 -> user0_.user_id
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select : finishing up [level=1, statement=select]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.HqlSqlWalker] -- processQuery() :  ( SELECT ( {select clause} user0_.user_id ) ( FromClause{level=1} user user0_ ) )
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Tables referenced from query nodes:
 \-QueryNode
    +-SelectClause
    | referencedTables(entity User): [user]
    |  +-IdentNode
    |  | persister: SingleTableEntityPersister(com.prototype.thymeleaf.entity.User)
    |  | originalText: generatedAlias0
    |  \-SqlFragment
    \-FromClause
       \-FromElement

[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.util.JoinProcessor] -- Using FROM fragment [user user0_]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.antlr.HqlSqlBaseWalker] -- select >> end [level=1, statement=select]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- --- SQL AST ---
 \-[SELECT] QueryNode: 'SELECT'  querySpaces (user)
    +-[SELECT_CLAUSE] SelectClause: '{select clause}'
    |  +-[ALIAS_REF] IdentNode: 'user0_.user_id as user_id1_0_' {alias=generatedAlias0, className=com.prototype.thymeleaf.entity.User, tableAlias=user0_}
    |  \-[SQL_TOKEN] SqlFragment: 'user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_'
    \-[FROM] FromClause: 'from' FromClause{level=1, fromElementCounter=1, fromElements=1, fromElementByClassAlias=[generatedAlias0], fromElementByTableAlias=[user0_], fromElementsByPath=[], collectionJoinFromElementsByPath=[], impliedElements=[]}
       \-[FROM_FRAGMENT] FromElement: 'user user0_' FromElement{explicit,not a collection join,not a fetch join,fetch non-lazy properties,classAlias=generatedAlias0,role=null,tableName=user,tableAlias=user0_,origin=null,columns={,className=com.prototype.thymeleaf.entity.User}}

[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- HQL: select generatedAlias0 from com.prototype.thymeleaf.entity.User as generatedAlias0
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.QueryTranslatorImpl] -- SQL: select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.hql.internal.ast.ErrorTracker] -- throwQueryException() : no errors
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:36:36] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:36:36] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false]]
[2021-06-29 18:37:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:37:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:37:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:37:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:38:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:38:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:38:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:38:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:39:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:39:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:39:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:40:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:40:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:40:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:41:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:41:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:41:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:41:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 7
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 7, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=7, age=15}
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:41:52] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:41:52] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:42:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:42:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:42:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:43:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:43:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:43:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:43:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:44:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:44:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:44:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:44:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:45:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:45:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:45:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:45:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:46:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:46:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:46:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:46:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:47:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:47:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:47:04] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:47:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:47:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:47:37] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:47:37] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:48:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:48:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:17] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:48:17] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:48:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:48:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:48:46] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:48:46] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:49:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:49:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:49:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:49:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:50:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:50:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:50:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:50:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:51:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:51:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:51:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:51:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:52:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:52:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:52:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:52:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:53:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:53:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:53:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:53:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:54:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:54:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:54:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:54:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:55:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:55:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:55:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:55:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:56:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:56:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:56:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:56:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:57:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:57:01] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:57:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:57:31] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:58:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:58:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:58:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:58:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:59:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:59:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 18:59:04] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 18:59:04] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true]]
[2021-06-29 18:59:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 18:59:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:00:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:00:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 8
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 8, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=j1, membership=true, userId=8, age=5}
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.SQL] -- insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.query.criteria.internal.CriteriaQueryImpl] -- Rendered criteria query -> select generatedAlias0 from User as generatedAlias0
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.SQL] -- select user0_.user_id as user_id1_0_, user0_.age as age2_0_, user0_.membership as membersh3_0_, user0_.name as name4_0_ from user user0_
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 0
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#1]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 1
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#2]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 2
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#3]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 3
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#4]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 4
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#5]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 5
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#6]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 6
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#7]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result set row: 7
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.loader.Loader] -- Result row: EntityKey[com.prototype.thymeleaf.entity.User#8]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 20
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#1]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 26
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Jane
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#2]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 35
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Doe
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#3]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 46
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Lisa
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#4]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 41
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Ann
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#5]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 10
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = Marie
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#6]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 15
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = John
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#7]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Resolving attributes for [com.prototype.thymeleaf.entity.User#8]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `age` : value = 5
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`age`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `membership` : value = true
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`membership`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Processing attribute `name` : value = j1
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Attribute (`name`)  - enhanced for lazy-loading? - false
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.internal.TwoPhaseLoad] -- Done materializing entity [com.prototype.thymeleaf.entity.User#8]
[2021-06-29 19:00:19] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 19:00:19] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false], User [userId=6, name=Marie, age=10, membership=false], User [userId=7, name=John, age=15, membership=true], User [userId=8, name=j1, age=5, membership=true]]
[2021-06-29 19:00:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:00:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:01:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:01:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:01:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:01:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:02:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:20] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn23: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:20] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn30: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:21] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn27: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:21] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn31: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:23] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn20: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:23] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn32: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:24] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn25: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn33: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:24] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:02:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:39] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn28: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn34: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn29: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn35: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn22: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn36: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:02:50] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn26: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:50] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn37: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:53] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn24: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:53] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn38: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:02:54] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn21: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection has passed maxLifetime)
[2021-06-29 19:02:54] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Added connection conn39: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA
[2021-06-29 19:03:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:03:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:03:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:03:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:04:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:04:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:04:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:04:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:05:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:05:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:05:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:05:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:06:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:06:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:06:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:06:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:07:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:07:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:07:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:07:32] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:08:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Pool stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:02] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Fill pool skipped, pool is at sufficient level.
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5c20b1bb] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@28fa2db3]
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:26] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn30: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn31: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn32: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn33: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn34: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn35: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn36: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn37: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn38: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-3 - Closing connection conn39: url=jdbc:h2:mem:9c4947d3-6daf-40cd-95ac-97ea0768d3dd user=SA: (connection evicted)
[2021-06-29 19:08:26] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-3 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 19:08:26] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4f795bc8

[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-4 - configuration:
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-4"
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn40: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@4f795bc8
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-4)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72f576
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c38e04
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@e5edab7
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@6afede27
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@6afede27
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce233af
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d41d1b1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@221163e2
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@221163e2
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@216dbe79
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c1c84d6
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7fee08d8
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@559e18ef
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@765629d4
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@28203164
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@1bd66cc3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@76237c37
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e3c75b3
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67128faf
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54b76281
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6476ed26
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@27b1ae5
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@5e637446
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38635c2f
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@2bb577d2
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@71c3fc73
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@34c77749
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@16e7c7da
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@16ec2933
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7750229b] into BootstrapContext; was [null]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7750229b) [was null]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5fa1f2bc] into BootstrapContext; was [null]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@2873fdca] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@43c5929a]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7750229b]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7750229b]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@400ed8b9] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@3759567a]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@5a70196f, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-4), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@4a63e4cb, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, java.version=11.0.5, com.sun.management.jmxremote.port=60553, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76362, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@2f9368f6, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-4), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn41: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn42: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn43: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn44: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn45: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn46: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn47: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn48: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Added connection conn49: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@400ed8b9] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@27398cdc]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@4448686e] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@27398cdc]
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:27] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn40: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn41: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn42: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn43: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn44: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn45: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn46: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn47: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn48: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-4 - Closing connection conn49: url=jdbc:h2:mem:775f6366-a0e9-4bbc-ab11-a71def0109da user=SA: (connection evicted)
[2021-06-29 19:08:27] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-4 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 19:08:46] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42c2e093

[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-5 - configuration:
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-5"
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn50: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@42c2e093
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-5)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@1cf3aea
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@72f576
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4c38e04
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@e5edab7
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@355e2ddd
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@2a4634b3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@6edc22db
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@25c235b1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@1f9a4929
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@40a49b46
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@6d3b254e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@4224c82b
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@31e211cd
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@6afede27
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@6afede27
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@4ce233af
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@1d41d1b1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@221163e2
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@221163e2
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@13f5305f
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@19e67c5d
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@33abd1d7
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@50231485
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@58815db8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@3d84b36f
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@40daee50
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@3a499fae
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@6cc83140
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@3a439647
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@4cfc7de8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@216dbe79
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@5208ab3e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@c1c84d6
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@7fee08d8
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@38e7edd3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@2b60bacf
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@7c1a2409
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@54ee4da4
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@7488b177
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@559e18ef
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@690a9159
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@b6c8480
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@765629d4
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@28203164
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@7e394abb
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1539488e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@1bd66cc3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@76237c37
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@723cbf3b
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@3e3c75b3
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@364dd11a
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@6d31220c
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@67128faf
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@54b76281
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6476ed26
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@4c8f21
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@49f7885d
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@e1ea8d2
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@22b921f9
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@23b91404
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@5679c54e
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@2ddaaf6b
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@4687e5c0
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@2d75c020
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4d67635e] into BootstrapContext; was [null]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4d67635e) [was null]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@34b726d7] into BootstrapContext; was [null]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@37c094a1] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@73212cb7]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4d67635e]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@4d67635e]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c85ebe] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@57773f22]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn51: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn52: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn53: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn54: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn55: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn56: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn57: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn58: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Added connection conn59: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA
[2021-06-29 19:08:46] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@7111c45, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-5), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@c73be4e, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, java.version=11.0.5, com.sun.management.jmxremote.port=60553, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76362, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.17253629584129539683, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@77e235d1, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-5), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@11c85ebe] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@118260ce]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@433ef4d5]
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: 92ac2e68-0b94-47a2-93b3-99ce086c7dd1 (<unnamed>)
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 19:08:46] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:448)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy115.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy115.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- rollback() called on an inactive transaction
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@6d4e4df7] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@118260ce]
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:47] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn50: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn51: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn52: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn53: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn54: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn55: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn56: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn57: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn58: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-5 - Closing connection conn59: url=jdbc:h2:mem:a335cfaf-f48b-4ce8-9178-e4da8328cce0 user=SA: (connection evicted)
[2021-06-29 19:08:47] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-5 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 19:09:02] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:09:02] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:09:02] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:09:03] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@52535437

[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-1"
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA
[2021-06-29 19:09:04] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@52535437
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.cfg.Environment] -- HHH000206: hibernate.properties not found
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@4a52145b
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@4a52145b
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@4a52145b
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@112102fd
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@7b5ca650
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@5d4f4afc
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@6db5cf77
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@6db5cf77
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6db5cf77
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@1737a333
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@1737a333
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@1737a333
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@3657a01
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@3657a01
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@3657a01
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@38074084
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@38074084
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@38074084
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@429aa148
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@429aa148
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@429aa148
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@602d4b64
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@602d4b64
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@602d4b64
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@b17e307
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@b17e307
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@b17e307
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@1a449fda
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@1a449fda
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@384dc07e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@384dc07e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@1547e8c6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@1547e8c6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@5e355bdb
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@22fb49c1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@34cd897a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@34cd897a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@713c6ffc
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@713c6ffc
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@4e7c003a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@4e7c003a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@280adc5e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@280adc5e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@14855de4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@14855de4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@5f05ca39
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@5f05ca39
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@233f0d4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@233f0d4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@351223fc
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@351223fc
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37fb20d6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@37fb20d6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@7fc68378
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@7fc68378
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@6550440a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@6550440a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@2555e07a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@2555e07a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@2555e07a
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@ba09759
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@1234e2b9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@1234e2b9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@1234e2b9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@278160c9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@3e2c5c81
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@129007d5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@129007d5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@70c630f5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@70c630f5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@28eea687
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@28eea687
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@5279698c
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@5279698c
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3f8b304
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3f8b304
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@62736676
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@10222885
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@10222885
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@10222885
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@50707fca
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@50707fca
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@50707fca
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@1ca673c3
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@192c1501
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@77da42d1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@77da42d1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@77da42d1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@3c77bbb5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@3c77bbb5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@3c77bbb5
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@41c1fe71
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@6287b25e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@76181fd8
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@76181fd8
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@39bed3ea
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@1528b569
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@1528b569
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@62d6b7f6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62d6b7f6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@47dfb22c
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@2816e89e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@6a462b27
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@61731354
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@61731354
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@487de2a9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@439d0590
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@38ec21d6
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@642e8e1e
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@43e15098
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@68fb6cf1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@314002a9
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@218e34e1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c652956] into BootstrapContext; was [null]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c652956) [was null]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@1d2def2d] into BootstrapContext; was [null]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@3029160f] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@25bb1fbc]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c652956]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@7c652956]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 19:09:04] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f4e53ef] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@5d8d185d]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@253b854c, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@23e84a14, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.3689099295438203076, java.version=11.0.5, com.sun.management.jmxremote.port=62388, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=76980, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.3689099295438203076, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@5590ac18, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@4f4e53ef] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@7c81af8e]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@3bc7f963]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@265faf45
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: d9a82c1e-faf9-4062-9723-5dced5f1ff3f (<unnamed>)
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:09:05] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:448)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy90.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy90.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- rollback() called on an inactive transaction
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@2ebb703b] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@7c81af8e]
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 19:09:06] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:4b0b9043-d716-4ee9-951f-f9e9ced55ded user=SA: (connection evicted)
[2021-06-29 19:09:06] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 19:10:37] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:10:37] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:10:37] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- Driver class org.h2.Driver found in Thread context class loader TomcatEmbeddedWebappClassLoader
  context: ROOT
  delegate: true
----------> Parent Classloader:
org.springframework.boot.devtools.restart.classloader.RestartClassLoader@211b5522

[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- HikariPool-1 - configuration:
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- allowPoolSuspension................................false
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- autoCommit................................true
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- catalog................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionInitSql................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTestQuery................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- connectionTimeout................................30000
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSource................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceClassName................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceJNDI................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- dataSourceProperties................................{password=<masked>}
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- driverClassName................................"org.h2.Driver"
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- exceptionOverrideClassName................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckProperties................................{}
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- healthCheckRegistry................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- idleTimeout................................600000
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- initializationFailTimeout................................1
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- isolateInternalQueries................................false
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- jdbcUrl................................jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- keepaliveTime................................0
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- leakDetectionThreshold................................0
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maxLifetime................................1800000
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- maximumPoolSize................................10
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricRegistry................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- metricsTrackerFactory................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- minimumIdle................................10
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- password................................<masked>
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- poolName................................"HikariPool-1"
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- readOnly................................false
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- registerMbeans................................false
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- scheduledExecutor................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- schema................................none
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- threadFactory................................internal
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- transactionIsolation................................default
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- username................................"sa"
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.HikariConfig] -- validationTimeout................................5000
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn0: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn1: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn2: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn3: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn4: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn5: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn6: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn7: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn8: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Added connection conn9: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA
[2021-06-29 19:10:39] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.jpa.internal.util.LogHelper] -- PersistenceUnitInfo [
	name: default
	persistence provider classname: null
	classloader: org.springframework.boot.devtools.restart.classloader.RestartClassLoader@211b5522
	excludeUnlistedClasses: true
	JTA datasource: null
	Non JTA datasource: HikariDataSource (HikariPool-1)
	Transaction type: RESOURCE_LOCAL
	PU root URL: file:/Users/yiyuanshang/study/prototype_springboot/target/classes/
	Shared Cache Mode: UNSPECIFIED
	Validation Mode: AUTO
	Jar files URLs []
	Managed classes names [
		com.prototype.thymeleaf.entity.User]
	Mapping files names []
	Properties []
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cfg.beanvalidation.BeanValidationIntegrator].
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.secure.spi.JaccIntegrator].
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.integrator.internal.IntegratorServiceImpl] -- Adding Integrator [org.hibernate.cache.internal.CollectionCacheInvalidator].
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.cfg.Environment] -- HHH000206: hibernate.properties not found
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.service.spi.ServiceBinding] -- Overriding existing service binding [org.hibernate.secure.spi.JaccService]
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cannot default RegionFactory based on registered strategies as `[]` RegionFactory strategies were registered
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.cache.internal.RegionFactoryInitiator] -- Cache region factory : org.hibernate.cache.internal.NoCachingRegionFactory
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@237d79ac
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration boolean -> org.hibernate.type.BooleanType@237d79ac
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Boolean -> org.hibernate.type.BooleanType@237d79ac
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration numeric_boolean -> org.hibernate.type.NumericBooleanType@1de4ab93
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration true_false -> org.hibernate.type.TrueFalseType@4e5181b6
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration yes_no -> org.hibernate.type.YesNoType@cc9e54d
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@6d1a85a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte -> org.hibernate.type.ByteType@6d1a85a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Byte -> org.hibernate.type.ByteType@6d1a85a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration character -> org.hibernate.type.CharacterType@47e1d720
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char -> org.hibernate.type.CharacterType@47e1d720
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Character -> org.hibernate.type.CharacterType@47e1d720
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@1e4f3b10
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration short -> org.hibernate.type.ShortType@1e4f3b10
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Short -> org.hibernate.type.ShortType@1e4f3b10
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration integer -> org.hibernate.type.IntegerType@3973dbbb
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration int -> org.hibernate.type.IntegerType@3973dbbb
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Integer -> org.hibernate.type.IntegerType@3973dbbb
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@4123b16a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration long -> org.hibernate.type.LongType@4123b16a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Long -> org.hibernate.type.LongType@4123b16a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@6cae0b3d
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration float -> org.hibernate.type.FloatType@6cae0b3d
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Float -> org.hibernate.type.FloatType@6cae0b3d
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@189703f9
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration double -> org.hibernate.type.DoubleType@189703f9
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Double -> org.hibernate.type.DoubleType@189703f9
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_decimal -> org.hibernate.type.BigDecimalType@3bca5e6c
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigDecimal -> org.hibernate.type.BigDecimalType@3bca5e6c
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration big_integer -> org.hibernate.type.BigIntegerType@3ae3fbab
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.math.BigInteger -> org.hibernate.type.BigIntegerType@3ae3fbab
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration string -> org.hibernate.type.StringType@4c84aa8a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.String -> org.hibernate.type.StringType@4c84aa8a
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nstring -> org.hibernate.type.StringNVarcharType@3a5cf044
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ncharacter -> org.hibernate.type.CharacterNCharType@5e94e88b
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration url -> org.hibernate.type.UrlType@6ca9a12e
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.net.URL -> org.hibernate.type.UrlType@6ca9a12e
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Duration -> org.hibernate.type.DurationType@6f5c0a36
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Duration -> org.hibernate.type.DurationType@6f5c0a36
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Instant -> org.hibernate.type.InstantType@b35f974
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.Instant -> org.hibernate.type.InstantType@b35f974
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e70e292
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDateTime -> org.hibernate.type.LocalDateTimeType@3e70e292
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalDate -> org.hibernate.type.LocalDateType@1f62acc6
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalDate -> org.hibernate.type.LocalDateType@1f62acc6
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration LocalTime -> org.hibernate.type.LocalTimeType@6d58da7e
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.LocalTime -> org.hibernate.type.LocalTimeType@6d58da7e
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146ff3af
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetDateTime -> org.hibernate.type.OffsetDateTimeType@146ff3af
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration OffsetTime -> org.hibernate.type.OffsetTimeType@4fcdcd09
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.OffsetTime -> org.hibernate.type.OffsetTimeType@4fcdcd09
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4dff43ec
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.time.ZonedDateTime -> org.hibernate.type.ZonedDateTimeType@4dff43ec
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration date -> org.hibernate.type.DateType@46ca1f84
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Date -> org.hibernate.type.DateType@46ca1f84
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration time -> org.hibernate.type.TimeType@5309a6fa
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Time -> org.hibernate.type.TimeType@5309a6fa
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timestamp -> org.hibernate.type.TimestampType@770ce5b
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Timestamp -> org.hibernate.type.TimestampType@770ce5b
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Date -> org.hibernate.type.TimestampType@770ce5b
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration dbtimestamp -> org.hibernate.type.DbTimestampType@4372d65e
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar -> org.hibernate.type.CalendarType@74b1b3df
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Calendar -> org.hibernate.type.CalendarType@74b1b3df
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.GregorianCalendar -> org.hibernate.type.CalendarType@74b1b3df
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_date -> org.hibernate.type.CalendarDateType@3617ce79
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration calendar_time -> org.hibernate.type.CalendarTimeType@725e7ee1
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration locale -> org.hibernate.type.LocaleType@1ddbd702
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Locale -> org.hibernate.type.LocaleType@1ddbd702
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration currency -> org.hibernate.type.CurrencyType@40598a31
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.Currency -> org.hibernate.type.CurrencyType@40598a31
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration timezone -> org.hibernate.type.TimeZoneType@8e9b9
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.TimeZone -> org.hibernate.type.TimeZoneType@8e9b9
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration class -> org.hibernate.type.ClassType@6fe70ec7
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Class -> org.hibernate.type.ClassType@6fe70ec7
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-binary -> org.hibernate.type.UUIDBinaryType@3841b204
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.util.UUID -> org.hibernate.type.UUIDBinaryType@3841b204
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration uuid-char -> org.hibernate.type.UUIDCharType@e567aa
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration binary -> org.hibernate.type.BinaryType@6aadeb8
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration byte[] -> org.hibernate.type.BinaryType@6aadeb8
[2021-06-29 19:10:39] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [B -> org.hibernate.type.BinaryType@6aadeb8
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-binary -> org.hibernate.type.WrapperBinaryType@591bdc57
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Byte[] -> org.hibernate.type.WrapperBinaryType@591bdc57
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Byte; -> org.hibernate.type.WrapperBinaryType@591bdc57
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration row_version -> org.hibernate.type.RowVersionType@6afe76db
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration image -> org.hibernate.type.ImageType@650ab5a8
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration characters -> org.hibernate.type.CharArrayType@32664f34
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration char[] -> org.hibernate.type.CharArrayType@32664f34
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [C -> org.hibernate.type.CharArrayType@32664f34
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration wrapper-characters -> org.hibernate.type.CharacterArrayType@1fe46d7d
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration [Ljava.lang.Character; -> org.hibernate.type.CharacterArrayType@1fe46d7d
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration Character[] -> org.hibernate.type.CharacterArrayType@1fe46d7d
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration text -> org.hibernate.type.TextType@651283d5
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration ntext -> org.hibernate.type.NTextType@130ff94
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration blob -> org.hibernate.type.BlobType@7e9bf30
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Blob -> org.hibernate.type.BlobType@7e9bf30
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_blob -> org.hibernate.type.MaterializedBlobType@434cf8e3
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration clob -> org.hibernate.type.ClobType@76135425
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.Clob -> org.hibernate.type.ClobType@76135425
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration nclob -> org.hibernate.type.NClobType@62727566
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.sql.NClob -> org.hibernate.type.NClobType@62727566
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_clob -> org.hibernate.type.MaterializedClobType@baf7c7
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration materialized_nclob -> org.hibernate.type.MaterializedNClobType@90f09d
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration serializable -> org.hibernate.type.SerializableType@3e0cb8e6
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration object -> org.hibernate.type.ObjectType@a96f946
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration java.lang.Object -> org.hibernate.type.ObjectType@a96f946
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_date -> org.hibernate.type.AdaptedImmutableType@7fb058c6
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_time -> org.hibernate.type.AdaptedImmutableType@6aad4d5
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_timestamp -> org.hibernate.type.AdaptedImmutableType@4010adb8
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_dbtimestamp -> org.hibernate.type.AdaptedImmutableType@c2591e4
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar -> org.hibernate.type.AdaptedImmutableType@712e8ece
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_calendar_date -> org.hibernate.type.AdaptedImmutableType@21f2f042
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_binary -> org.hibernate.type.AdaptedImmutableType@644af4a9
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.BasicTypeRegistry] -- Adding type registration imm_serializable -> org.hibernate.type.AdaptedImmutableType@44c0e375
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3bfe59c4] into BootstrapContext; was [null]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3bfe59c4) [was null]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanEnvironment [org.hibernate.jpa.boot.internal.StandardJpaScanEnvironmentImpl@5b897e11] into BootstrapContext; was [null]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting ScanOptions [org.hibernate.boot.archive.scan.internal.StandardScanOptions@4fe346a6] into BootstrapContext; was [org.hibernate.boot.archive.scan.internal.StandardScanOptions@53b7cb68]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.BootstrapContextImpl] -- Injecting JPA temp ClassLoader [null] into BootstrapContext; was [org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3bfe59c4]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- ClassLoaderAccessImpl#injectTempClassLoader(null) [was org.springframework.instrument.classloading.SimpleThrowawayClassLoader@3bfe59c4]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid2] -> [org.hibernate.id.UUIDGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [guid] -> [org.hibernate.id.GUIDGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [uuid.hex] -> [org.hibernate.id.UUIDHexGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [assigned] -> [org.hibernate.id.Assigned]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [identity] -> [org.hibernate.id.IdentityGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [select] -> [org.hibernate.id.SelectGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [seqhilo] -> [org.hibernate.id.SequenceHiLoGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [increment] -> [org.hibernate.id.IncrementGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [foreign] -> [org.hibernate.id.ForeignGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [sequence-identity] -> [org.hibernate.id.SequenceIdentityGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-sequence] -> [org.hibernate.id.enhanced.SequenceStyleGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.id.factory.internal.DefaultIdentifierGeneratorFactory] -- Registering IdentifierGenerator strategy [enhanced-table] -> [org.hibernate.id.enhanced.TableGenerator]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Database ->
       name : H2
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- Driver ->
       name : H2 JDBC Driver
    version : 1.4.200 (2019-10-14)
      major : 1
      minor : 4
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.engine.jdbc.env.internal.JdbcEnvironmentInitiator] -- JDBC version : 4.1
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.engine.jdbc.env.spi.IdentifierHelperBuilder] -- JDBC driver metadata reported database stores quoted identifiers in neither upper, lower nor mixed case
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.model.relational.Namespace] -- Created database namespace [logicalName=Name{catalog=null, schema=null}, physicalName=Name{catalog=null, schema=null}]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@690d89f] to MetadataBuildingContext [org.hibernate.boot.internal.MetadataBuildingContextRootImpl@1c11a259]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.AnnotationBinder] -- Binding entity from annotated class: com.prototype.thymeleaf.entity.User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3DiscriminatorColumn{logicalColumnName'DTYPE', discriminatorTypeName='string'}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Import with entity name User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.EntityBinder] -- Bind entity com.prototype.thymeleaf.entity.User on table user
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=user_id, insertable=true, updatable=true, unique=false}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property userId with lazy=false
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:userId]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for userId
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property userId
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.BinderHelper] -- #makeIdGenerator(org.hibernate.mapping.SimpleValue([org.hibernate.mapping.Column(user_id)]), userId, org.hibernate.id.enhanced.SequenceStyleGenerator, , ...)
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=age, insertable=true, updatable=true, unique=false}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property age with lazy=false
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:age]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for age
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property age
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=membership, insertable=true, updatable=true, unique=false}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property membership with lazy=false
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:membership]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for membership
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property membership
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Ejb3Column] -- Binding column: Ejb3Column{table=org.hibernate.mapping.Table(user), mappingColumn=name, insertable=true, updatable=true, unique=false}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- MetadataSourceProcessor property name with lazy=false
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.AbstractPropertyHolder] -- Attempting to locate auto-apply AttributeConverter for property [com.prototype.thymeleaf.entity.User:name]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- building SimpleValue for name
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.PropertyBinder] -- Building property name
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for userId
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for age
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for membership
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.annotations.SimpleValueBinder] -- Starting fillSimpleValue for name
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.mapping.PrimaryKey] -- Forcing column [user_id] to be non-null as it is part of the primary key for table [user]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Building session factory
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- SessionFactory name : null
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic flush during beforeCompletion(): enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic session close at end of transaction: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Statistics: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Deleted entity synthetic identifier rollback: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default entity-mode: pojo
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Check Nullability in Core (should be disabled when Bean Validation is on): enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Allow initialization of lazy state outside session : disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Using BatchFetchStyle : LEGACY
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default batch fetch size: -1
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Maximum outer join fetch depth: null
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Default null ordering: NONE
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL updates by primary key: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Order SQL inserts for batching: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- multi-tenancy strategy : NONE
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JTA Track by Thread: enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Query language substitutions: {}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Named query checking : enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level query cache factory: null
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache region prefix: null
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Optimize second-level cache for minimal puts: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Structured second-level cache entries: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Second-level cache direct-reference entries: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Automatic eviction of collection cache: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch size: 15
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC batch updates for versioned data: enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Scrollable result sets: enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Wrap result sets: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC3 getGeneratedKeys(): enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JDBC result set fetch size: null
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Connection release mode: ON_CLOSE
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- Generate SQL with comments: disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - query : disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - closed-handling : disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - lists : disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.cfg.Settings] -- JPA compliance - transactions : disabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Session factory constructed with filter configurations : {}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiating session factory with properties: {gopherProxySet=false, awt.toolkit=sun.lwawt.macosx.LWCToolkit, hibernate.id.new_generator_mappings=true, java.specification.version=11, sun.cpu.isalist=, hibernate.resource.beans.container=org.springframework.orm.hibernate5.SpringBeanContainer@67887ec5, hibernate.connection.handling_mode=DELAYED_ACQUISITION_AND_HOLD, sun.jnu.encoding=UTF-8, hibernate.implicit_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringImplicitNamingStrategy, java.class.path=/Users/yiyuanshang/study/prototype_springboot/target/classes:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-web/2.5.1/spring-boot-starter-web-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter/2.5.1/spring-boot-starter-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.5.1/spring-boot-starter-logging-2.5.1.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar:/Users/yiyuanshang/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.14.1/log4j-to-slf4j-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/apache/logging/log4j/log4j-api/2.14.1/log4j-api-2.14.1.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/yaml/snakeyaml/1.28/snakeyaml-1.28.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.5.1/spring-boot-starter-json-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.12.3/jackson-databind-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.12.3/jackson-annotations-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.12.3/jackson-core-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.3/jackson-datatype-jdk8-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.3/jackson-datatype-jsr310-2.12.3.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.3/jackson-module-parameter-names-2.12.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-web/5.3.8/spring-web-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-beans/5.3.8/spring-beans-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-webmvc/5.3.8/spring-webmvc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aop/5.3.8/spring-aop-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-context/5.3.8/spring-context-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-expression/5.3.8/spring-expression-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-thymeleaf/2.5.1/spring-boot-starter-thymeleaf-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf-spring5/3.0.12.RELEASE/thymeleaf-spring5-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/thymeleaf/3.0.12.RELEASE/thymeleaf-3.0.12.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/attoparser/attoparser/2.0.5.RELEASE/attoparser-2.0.5.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/unbescape/unbescape/1.1.6.RELEASE/unbescape-1.1.6.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar:/Users/yiyuanshang/.m2/repository/org/thymeleaf/extras/thymeleaf-extras-java8time/3.0.4.RELEASE/thymeleaf-extras-java8time-3.0.4.RELEASE.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-tomcat/2.5.1/spring-boot-starter-tomcat-2.5.1.jar:/Users/yiyuanshang/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-core/9.0.46/tomcat-embed-core-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-el/9.0.46/tomcat-embed-el-9.0.46.jar:/Users/yiyuanshang/.m2/repository/org/apache/tomcat/embed/tomcat-embed-websocket/9.0.46/tomcat-embed-websocket-9.0.46.jar:/Users/yiyuanshang/.m2/repository/jakarta/xml/bind/jakarta.xml.bind-api/2.3.3/jakarta.xml.bind-api-2.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/activation/jakarta.activation-api/1.2.2/jakarta.activation-api-1.2.2.jar:/Users/yiyuanshang/.m2/repository/net/bytebuddy/byte-buddy/1.10.22/byte-buddy-1.10.22.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-core/5.3.8/spring-core-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jcl/5.3.8/spring-jcl-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-devtools/2.5.1/spring-boot-devtools-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot/2.5.1/spring-boot-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.5.1/spring-boot-autoconfigure-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-data-jpa/2.5.1/spring-boot-starter-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.5.1/spring-boot-starter-aop-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/aspectj/aspectjweaver/1.9.6/aspectjweaver-1.9.6.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-jdbc/2.5.1/spring-boot-starter-jdbc-2.5.1.jar:/Users/yiyuanshang/.m2/repository/com/zaxxer/HikariCP/4.0.3/HikariCP-4.0.3.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-jdbc/5.3.8/spring-jdbc-5.3.8.jar:/Users/yiyuanshang/.m2/repository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar:/Users/yiyuanshang/.m2/repository/jakarta/persistence/jakarta.persistence-api/2.2.3/jakarta.persistence-api-2.2.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/hibernate-core/5.4.32.Final/hibernate-core-5.4.32.Final.jar:/Users/yiyuanshang/.m2/repository/org/jboss/logging/jboss-logging/3.4.2.Final/jboss-logging-3.4.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/javassist/javassist/3.27.0-GA/javassist-3.27.0-GA.jar:/Users/yiyuanshang/.m2/repository/antlr/antlr/2.7.7/antlr-2.7.7.jar:/Users/yiyuanshang/.m2/repository/org/jboss/jandex/2.2.3.Final/jandex-2.2.3.Final.jar:/Users/yiyuanshang/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar:/Users/yiyuanshang/.m2/repository/org/dom4j/dom4j/2.1.3/dom4j-2.1.3.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/common/hibernate-commons-annotations/5.1.2.Final/hibernate-commons-annotations-5.1.2.Final.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/jaxb-runtime/2.3.4/jaxb-runtime-2.3.4.jar:/Users/yiyuanshang/.m2/repository/org/glassfish/jaxb/txw2/2.3.4/txw2-2.3.4.jar:/Users/yiyuanshang/.m2/repository/com/sun/istack/istack-commons-runtime/3.0.12/istack-commons-runtime-3.0.12.jar:/Users/yiyuanshang/.m2/repository/com/sun/activation/jakarta.activation/1.2.2/jakarta.activation-1.2.2.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-jpa/2.5.1/spring-data-jpa-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/data/spring-data-commons/2.5.1/spring-data-commons-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-orm/5.3.8/spring-orm-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-tx/5.3.8/spring-tx-5.3.8.jar:/Users/yiyuanshang/.m2/repository/org/springframework/spring-aspects/5.3.8/spring-aspects-5.3.8.jar:/Users/yiyuanshang/.m2/repository/com/h2database/h2/1.4.200/h2-1.4.200.jar:/Users/yiyuanshang/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.5.1/spring-boot-starter-validation-2.5.1.jar:/Users/yiyuanshang/.m2/repository/org/hibernate/validator/hibernate-validator/6.2.0.Final/hibernate-validator-6.2.0.Final.jar:/Users/yiyuanshang/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, com.sun.management.jmxremote.authenticate=false, java.vm.vendor=AdoptOpenJDK, sun.arch.data.model=64, java.vendor.url=https://adoptopenjdk.net/, catalina.useNaming=false, user.timezone=America/Toronto, os.name=Mac OS X, java.vm.specification.version=11, javax.persistence.validation.mode=AUTO, sun.java.launcher=SUN_STANDARD, user.country=CA, sun.boot.library.path=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home/lib, com.sun.management.jmxremote.ssl=false, sun.java.command=com.prototype.PrototypeSpringbootApplication --spring.output.ansi.enabled=always, spring.application.admin.enabled=true, javax.persistence.nonJtaDataSource=HikariDataSource (HikariPool-1), hibernate.transaction.jta.platform=org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform@1ae927c9, http.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, com.sun.management.jmxremote=, javax.persistence.sharedCache.mode=UNSPECIFIED, jdk.debug=release, sun.cpu.endian=little, user.home=/Users/yiyuanshang, spring.boot.project.name=prototype_springboot, user.language=en, java.specification.vendor=Oracle Corporation, java.version.date=2019-10-15, java.home=/Library/Java/JavaVirtualMachines/adoptopenjdk-11.jdk/Contents/Home, file.separator=/, java.vm.compressedOopsMode=Zero based, line.separator=
, java.specification.name=Java Platform API Specification, java.vm.specification.vendor=Oracle Corporation, FILE_LOG_CHARSET=UTF-8, hibernate.transaction.coordinator_class=class org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorBuilderImpl, java.awt.graphicsenv=sun.awt.CGraphicsEnvironment, java.awt.headless=true, hibernate.hbm2ddl.auto=create-drop, sun.management.compiler=HotSpot 64-Bit Tiered Compilers, ftp.nonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.runtime.version=11.0.5+10, user.name=yiyuanshang, spring.jmx.enabled=true, path.separator=:, java.security.egd=file:/dev/./urandom, os.version=10.16, java.runtime.name=OpenJDK Runtime Environment, file.encoding=UTF-8, hibernate.ejb.persistenceUnitName=default, spring.beaninfo.ignore=true, java.vm.name=OpenJDK 64-Bit Server VM, java.vendor.version=AdoptOpenJDK, java.vendor.url.bug=https://github.com/AdoptOpenJDK/openjdk-build/issues, java.io.tmpdir=/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/, com.zaxxer.hikari.pool_number=1, catalina.home=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2332019885865051572, java.version=11.0.5, com.sun.management.jmxremote.port=62456, hibernate.physical_naming_strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy, user.dir=/Users/yiyuanshang/study/prototype_springboot, os.arch=x86_64, java.vm.specification.name=Java Virtual Machine Specification, PID=77008, java.awt.printerjob=sun.lwawt.macosx.CPrinterJob, sun.os.patch.level=unknown, CONSOLE_LOG_CHARSET=UTF-8, catalina.base=/private/var/folders/ql/49xy2z8x1yd68qr6q9p1n39w0000gn/T/tomcat.8080.2332019885865051572, hibernate.boot.CfgXmlAccessService.key=org.hibernate.boot.registry.StandardServiceRegistryBuilder$1@118a8819, java.library.path=/Users/yiyuanshang/Library/Java/Extensions:/Library/Java/Extensions:/Network/Library/Java/Extensions:/System/Library/Java/Extensions:/usr/lib/java:., java.vendor=AdoptOpenJDK, java.vm.info=mixed mode, java.vm.version=11.0.5+10, hibernate.bytecode.use_reflection_optimizer=false, java.rmi.server.randomIDs=true, java.rmi.server.hostname=localhost, sun.io.unicode.encoding=UnicodeBig, hibernate.archive.scanner=org.hibernate.boot.archive.scan.internal.DisabledScanner, hibernate.connection.datasource=HikariDataSource (HikariPool-1), socksNonProxyHosts=local|*.local|169.254/16|*.169.254/16, java.class.version=55.0}
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.secure.spi.JaccIntegrator] -- Skipping JACC integration as it was not enabled
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- Instantiated session factory
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration@690d89f] to SessionFactoryImpl [org.hibernate.internal.SessionFactoryImpl@21308c70]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- Not known whether passed class name [com.prototype.thymeleaf.entity.User] is safe
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.boot.internal.ClassLoaderAccessImpl] -- No temp ClassLoader provided; using live ClassLoader for loading potentially unsafe class : com.prototype.thymeleaf.entity.User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] -- Static SQL for entity: com.prototype.thymeleaf.entity.User
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Version select: select user_id from user where user_id =?
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Snapshot select: select user_.user_id, user_.age as age2_0_, user_.membership as membersh3_0_, user_.name as name4_0_ from user user_ where user_.user_id=?
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Insert 0: insert into user (age, membership, name, user_id) values (?, ?, ?, ?)
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Update 0: update user set age=?, membership=?, name=? where user_id=?
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.entity.AbstractEntityPersister] --  Delete 0: delete from user where user_id=?
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.spaces.QuerySpacesImpl] -- Adding QuerySpace : uid = <gen:0> -> org.hibernate.loader.plan.build.internal.spaces.EntityQuerySpaceImpl@2c842adf]
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : age
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : membership
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.persister.walking.spi.MetamodelGraphWalker] -- Visiting attribute path : name
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.loader.plan.build.internal.FetchStyleLoadPlanBuildingAssociationVisitationStrategy] -- Building LoadPlan...
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.loader.plan.exec.internal.LoadQueryJoinAndFetchProcessor] -- processing queryspace <gen:0>
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.loader.plan.build.spi.LoadPlanTreePrinter] -- LoadPlan(entity=com.prototype.thymeleaf.entity.User)
    - Returns
       - EntityReturnImpl(entity=com.prototype.thymeleaf.entity.User, querySpaceUid=<gen:0>, path=com.prototype.thymeleaf.entity.User)
    - QuerySpaces
       - EntityQuerySpaceImpl(uid=<gen:0>, entity=com.prototype.thymeleaf.entity.User)
          - SQL table alias mapping - user0_
          - alias suffix - 0_
          - suffixed key columns - {user_id1_0_0_}

[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.loader.entity.plan.EntityLoader] -- Static select for entity com.prototype.thymeleaf.entity.User [NONE]: select user0_.user_id as user_id1_0_0_, user0_.age as age2_0_0_, user0_.membership as membersh3_0_0_, user0_.name as name4_0_0_ from user user0_ where user0_.user_id=?
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:10:40] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.SQL] -- create sequence hibernate_sequence start with 1 increment by 1
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.SQL] -- create table user (user_id integer not null, age integer not null, membership boolean not null, name varchar(255), primary key (user_id))
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named HQL queries
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.query.spi.NamedQueryRepository] -- Checking 0 named SQL queries
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Initializing SessionFactoryRegistry : org.hibernate.internal.SessionFactoryRegistry@1c6f2f6a
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Registering SessionFactory: b7fe24ea-ef5c-4b38-95d4-86e4d105e8b2 (<unnamed>)
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.SessionFactoryRegistry] -- Not binding SessionFactory to JNDI, no JNDI name configured
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.stat.internal.StatisticsInitiator] -- Statistics initialized [enabled=false]
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.messageinterpolation.ResourceBundleMessageInterpolator] -- Loaded expression factory via original TCCL
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom MessageInterpolator of type org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ConstraintValidatorFactory of type org.springframework.validation.beanvalidation.SpringConstraintValidatorFactory
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.AbstractConfigurationImpl] -- Setting custom ParameterNameProvider of type org.springframework.validation.beanvalidation.LocalValidatorFactoryBean$1
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- Trying to load META-INF/validation.xml for XML based Validator configuration.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via user class loader
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via TCCL
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ResourceLoaderHelper] -- Trying to load META-INF/validation.xml via Hibernate Validator's class loader
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.xml.config.ValidationXmlParser] -- No META-INF/validation.xml found. Using annotation based configuration only.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Found javax.persistence.Persistence on classpath containing 'getPersistenceUtil'. Assuming JPA 2 environment. Trying to instantiate JPA aware TraversableResolver
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.resolver.TraversableResolvers] -- Instantiated JPA aware TraversableResolver of type org.hibernate.validator.internal.engine.resolver.JPATraversableResolver.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000252: Using org.hibernate.validator.internal.engine.DefaultPropertyNodeNameProvider as property node name provider.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.springframework.validation.beanvalidation.LocaleContextMessageInterpolator as ValidatorFactory-scoped message interpolator.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.resolver.JPATraversableResolver as ValidatorFactory-scoped traversable resolver.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.util.ExecutableParameterNameProvider as ValidatorFactory-scoped parameter name provider.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.DefaultClockProvider as ValidatorFactory-scoped clock provider.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.validator.internal.engine.ValidatorFactoryConfigurationHelper] -- HV000234: Using org.hibernate.validator.internal.engine.scripting.DefaultScriptEvaluatorFactory as ValidatorFactory-scoped script evaluator factory.
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- On TransactionImpl creation, JpaCompliance#isJpaTransactionComplianceEnabled == false
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- begin
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.SQL] -- call next value for hibernate_sequence
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.id.enhanced.SequenceStructure] -- Sequence value obtained: 1
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.resource.jdbc.internal.ResourceRegistryStandardImpl] -- HHH000387: ResultSet's statement was not registered
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.event.internal.AbstractSaveEventListener] -- Generated identifier: 1, using strategy: org.hibernate.id.enhanced.SequenceStyleGenerator
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- committing
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Processing flush-time cascades
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Dirty checking collections
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 1 insertions, 0 updates, 0 deletions to 1 objects
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.event.internal.AbstractFlushingEventListener] -- Flushed: 0 (re)creations, 0 updates, 0 removals to 0 collections
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- Listing entities:
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.util.EntityPrinter] -- com.prototype.thymeleaf.entity.User{name=John, membership=true, userId=1, age=20}
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.engine.transaction.internal.TransactionImpl.markRollbackOnly(TransactionImpl.java:203)
	at org.hibernate.internal.AbstractSharedSessionContract.markForRollbackOnly(AbstractSharedSessionContract.java:405)
	at org.hibernate.internal.ExceptionConverterImpl.convert(ExceptionConverterImpl.java:191)
	at org.hibernate.internal.SessionImpl.doFlush(SessionImpl.java:1366)
	at org.hibernate.internal.SessionImpl.managedFlush(SessionImpl.java:453)
	at org.hibernate.internal.SessionImpl.flushBeforeTransactionCompletion(SessionImpl.java:3212)
	at org.hibernate.internal.SessionImpl.beforeTransactionCompletion(SessionImpl.java:2380)
	at org.hibernate.engine.jdbc.internal.JdbcCoordinatorImpl.beforeTransactionCompletion(JdbcCoordinatorImpl.java:448)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:183)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy90.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl] -- JDBC transaction marked for rollback-only (exception provided for stack trace)
java.lang.Exception: exception just for purpose of providing stack trace
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.markRollbackOnly(JdbcResourceLocalTransactionCoordinatorImpl.java:324)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.beforeCompletionCallback(JdbcResourceLocalTransactionCoordinatorImpl.java:192)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl.access$300(JdbcResourceLocalTransactionCoordinatorImpl.java:40)
	at org.hibernate.resource.transaction.backend.jdbc.internal.JdbcResourceLocalTransactionCoordinatorImpl$TransactionDriverControlImpl.commit(JdbcResourceLocalTransactionCoordinatorImpl.java:281)
	at org.hibernate.engine.transaction.internal.TransactionImpl.commit(TransactionImpl.java:101)
	at org.springframework.orm.jpa.JpaTransactionManager.doCommit(JpaTransactionManager.java:562)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.processCommit(AbstractPlatformTransactionManager.java:743)
	at org.springframework.transaction.support.AbstractPlatformTransactionManager.commit(AbstractPlatformTransactionManager.java:711)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.commitTransactionAfterReturning(TransactionAspectSupport.java:654)
	at org.springframework.transaction.interceptor.TransactionAspectSupport.invokeWithinTransaction(TransactionAspectSupport.java:407)
	at org.springframework.transaction.interceptor.TransactionInterceptor.invoke(TransactionInterceptor.java:119)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.dao.support.PersistenceExceptionTranslationInterceptor.invoke(PersistenceExceptionTranslationInterceptor.java:137)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.data.jpa.repository.support.CrudMethodMetadataPostProcessor$CrudMethodMetadataPopulatingMethodInterceptor.invoke(CrudMethodMetadataPostProcessor.java:174)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.interceptor.ExposeInvocationInterceptor.invoke(ExposeInvocationInterceptor.java:97)
	at org.springframework.aop.framework.ReflectiveMethodInvocation.proceed(ReflectiveMethodInvocation.java:186)
	at org.springframework.aop.framework.JdkDynamicAopProxy.invoke(JdkDynamicAopProxy.java:215)
	at com.sun.proxy.$Proxy90.save(Unknown Source)
	at com.prototype.thymeleaf.config.LoadDatabase.lambda$0(LoadDatabase.java:21)
	at org.springframework.boot.SpringApplication.callRunner(SpringApplication.java:791)
	at org.springframework.boot.SpringApplication.callRunners(SpringApplication.java:775)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:345)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)
	at org.springframework.boot.SpringApplication.run(SpringApplication.java:1332)
	at com.prototype.PrototypeSpringbootApplication.main(PrototypeSpringbootApplication.java:11)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.springframework.boot.devtools.restart.RestartLauncher.run(RestartLauncher.java:49)
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.engine.transaction.internal.TransactionImpl] -- rollback() called on an inactive transaction
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.internal.SessionFactoryImpl] -- HHH000031: Closing
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.SQL] -- drop table if exists user CASCADE 
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.SQL] -- drop sequence if exists hibernate_sequence
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.type.spi.TypeConfiguration$Scope] -- Un-scoping TypeConfiguration [org.hibernate.type.spi.TypeConfiguration$Scope@5c9d89be] from SessionFactory [org.hibernate.internal.SessionFactoryImpl@21308c70]
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.service.internal.AbstractServiceRegistryImpl] -- Implicitly destroying ServiceRegistry on de-registration of all child ServiceRegistries
[2021-06-29 19:10:41] -- [DEBUG]: [org.hibernate.boot.registry.internal.BootstrapServiceRegistryImpl] -- Implicitly destroying Boot-strap registry on de-registration of all child ServiceRegistries
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - Before shutdown stats (total=10, active=0, idle=10, waiting=0)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn0: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn1: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn2: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn3: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn4: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn5: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn6: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn7: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn8: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.PoolBase] -- HikariPool-1 - Closing connection conn9: url=jdbc:h2:mem:32b65b6c-8c6d-4209-8c4d-99ee3a3da7a3 user=SA: (connection evicted)
[2021-06-29 19:10:42] -- [DEBUG]: [com.zaxxer.hikari.pool.HikariPool] -- HikariPool-1 - After shutdown stats (total=0, active=0, idle=0, waiting=0)
[2021-06-29 19:14:10] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:14:10] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:15:07] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:15:07] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:15:36] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:15:36] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:15:44] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] INITIALIZING TEMPLATE ENGINE
[2021-06-29 19:15:44] -- [DEBUG]: [org.thymeleaf.TemplateEngine.CONFIG] -- Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.12.RELEASE (built 2020-12-21T00:26:28+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1700]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1700]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1700]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1800]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@33099857
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@7e3b944b
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@3b726834
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[2021-06-29 19:15:44] -- [DEBUG]: [org.thymeleaf.TemplateEngine] -- [THYMELEAF] TEMPLATE ENGINE INITIALIZED
[2021-06-29 19:16:38] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:16:43] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:30:57] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:33:46] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:33:46] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:34:39] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:40:34] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:41:18] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:48:18] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:49:33] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:50:34] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:50:34] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:50:50] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:51:28] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:56:25] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
[2021-06-29 19:56:42] -- [DEBUG]: [org.jboss.logging] -- Logging Provider: org.jboss.logging.Log4j2LoggerProvider
[2021-06-29 19:56:42] -- [DEBUG]: [com.prototype.PrototypeSpringbootApplication] -- Running with Spring Boot v2.5.1, Spring v5.3.8
[2021-06-29 19:56:48] -- [DEBUG]: [com.prototype.thymeleaf.controller.UserController] -- returning user list:[User [userId=1, name=John, age=20, membership=true], User [userId=2, name=Jane, age=26, membership=false], User [userId=3, name=Doe, age=35, membership=false], User [userId=4, name=Lisa, age=46, membership=true], User [userId=5, name=Ann, age=41, membership=false]]
